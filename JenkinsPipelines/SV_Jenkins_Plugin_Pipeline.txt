/*
CA SV Plugin Pipeline Demo
Retrieve Virtual Service MAR File from Git
Deploy Virtual Service
Deploy/Run Test
Stop Virtual Service
UnDeploy Virtual Service
*/
node {
    
    def VEID = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
    
       def vseID = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
    
	def devTestServer = 'localhost'
	devTestServer = 'localhost'

	def vseServer = 'VSE'
	//vseServer = 'VSED2'
	def marFile = 'VirtualServices/cars-rest.mar'
	def vsName = 'cars-rest'
	def testFile = 'Tests/cars-baseline-rest-test.mar'
	def sleepTime = '20'
	
	
// This is the credential ID stored in each Jenkins instance 
// You will need to change this to your Credential ID
def myCredentialID = 'be6bcb71-bb37-40b7-b6de-bb2e7d951297'
    
  stage('Retreive Project from Github') {
       // clean the workspace
       //bat 'git clean -fdx'
       // Git Project downloaded to workspace
       git 'https://github.com/milka12/BC2019'
   }
   
   stage('Deploy Virtual Service') {
          
            svDeployVirtualService host: """${devTestServer}""", marFilesPaths: """${marFile}""", port: '1505', secured: false, tokenCredentialId: """${myCredentialID}""", useCustomRegistry: true, vseName: """${vseServer}"""

   }
   
   stage('Deploy and Run Test') {
           
        svDeployTest host: """${devTestServer}""", marFilePath: """${testFile}""", port: '1505', secured: false, testType: 'tests', tokenCredentialId: """${myCredentialID}""", useCustomRegistry: true
   }
   
    
stage ("wait_for_test") {
    echo """Waiting ${sleepTime} seconds for deployment to complete prior starting smoke testing"""
    sleep sleepTime.toInteger() // seconds
}

  stage('Stop Virtual Service') {
           
          svStopVirtualService host: """${devTestServer}""", port: '1505', secured: false, tokenCredentialId: """${myCredentialID}""", useCustomRegistry: true, vsNames: """${vsName}""", vseName: """${vseServer}"""
   }
   
    stage('Undeploy Virtual Service') {
           
          svUndeployVirtualService  host: """${devTestServer}""",  port: '1505', secured: false, tokenCredentialId: """${myCredentialID}""", useCustomRegistry: true, vsNames: """${vsName}""", vseName: """${vseServer}"""
   }

stage ("Publish Test reports") {
svPublishTestReport()
    
}
   

}